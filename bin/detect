#! /usr/bin/env node

const jpeg = require("jpeg-js");
const fs = require("fs");

const mult = 4;
const maxRow = 30;
const maxCol = 30;

function checkFile(path) {
  const jpegData = fs.readFileSync(path);
  const rawImageData = jpeg.decode(jpegData, true);
  const widthMult = rawImageData.width * mult;
  const heightMult = rawImageData.height * mult;

  let output = [];
  let numDark = 0;

  for (let i = 0; i < rawImageData.data.length; i += mult) {
    const row = Math.floor(i / widthMult);
    const col = (i % widthMult) / mult;
    // console.log(col, row);

    if (row >= maxRow && col >= maxCol) {
      break;
    }
    if (row >= maxRow || col >= maxCol) {
      continue;
    }

    const r = rawImageData.data[i];
    const g = rawImageData.data[i + 1];
    const b = rawImageData.data[i + 2];
    const luma = (0.2126 * r + 0.7152 * g + 0.0722 * b) / 256;

    if (!output[row]) {
      output[row] = [];
    }

    output[row][col] = luma < 0.8;
    // console.log(col, row, luma);

    if (output[row][col]) {
      numDark++;
    }
  }

  // for (let i = 0; i < output.length; i++) {
  //   const row = output[i].map((isDark) => isDark ? "@" : " ");
  //   console.log(row.join(""));
  // }

  const ratioDark = numDark / (maxCol * maxRow);
  // console.log(ratioDark);
  if (ratioDark > 0.01 && ratioDark < 0.03) {
    return true;
  }
}

let foundCounter = 0;
fs.readdirSync("frames").forEach(file => {
  if (file.slice(-3) === "jpg") {
    if (checkFile("frames/" + file)) {
      foundCounter++;
      console.log(file);
      fs.copyFileSync("frames/" + file, "goodframes/" + file);
    }
  }
});

console.log("Found " + foundCounter + " frames");
